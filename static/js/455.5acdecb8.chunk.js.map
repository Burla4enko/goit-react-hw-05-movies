{"version":3,"file":"static/js/455.5acdecb8.chunk.js","mappings":"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","sources":["pages/MoviePage/MoviePage.styled.js","pages/MoviePage/MoviePage.js","utils/fetch-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Article = styled.article`\n  padding: 16px;\n\n  a {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MovieInfoTitle = styled.span`\n  font-weight: 500;\n  font-size: 1.1em;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'utils/fetch-movies';\nimport { Article, MovieInfo, MovieInfoTitle } from './MoviePage.styled';\nimport { StyledNavLink } from 'components/Header/Header.styled';\nimport { getMovieById } from 'utils/fetch-movies';\nimport { Suspense, useEffect, useState } from 'react';\nimport { NotFound } from 'pages/NotFound/NotFound';\n\nexport default function MoviePage() {\n  const placeholder =\n    'https://mbfn.org/wp-content/uploads/2020/09/image-coming-soon-placeholder.png';\n  const location = useLocation();\n  const [backUrl, setBackUrl] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [rating, setRating] = useState(0);\n  const [genres, setGenres] = useState([]);\n  const [overview, setOverview] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    location.state && setBackUrl(() => location.state.from);\n  }, [location]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieInfo = async () => {\n      try {\n        const movieInfo = await (await getMovieById(movieId)).data;\n        const { poster_path, title, vote_average, genres, overview } =\n          movieInfo;\n        setError(false);\n        setIsLoading(false);\n        setImgUrl(poster_path);\n        setTitle(title);\n        setRating(vote_average.toFixed(2));\n        setOverview(overview);\n        setGenres(() =>\n          genres.map(genre => genre.name.toLowerCase()).join(', ')\n        );\n      } catch {\n        setError(true);\n        setIsLoading(false);\n      }\n    };\n\n    getMovieInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && !isLoading ? (\n        <NotFound />\n      ) : (\n        <Article>\n          <StyledNavLink to={backUrl}>Back</StyledNavLink>\n          <MovieInfo>\n            <img\n              src={imgUrl ? BASE_IMG_URL + imgUrl : placeholder}\n              alt={`Poster: ${title}`}\n            />\n            <div>\n              <h2>{title}</h2>\n              <p>\n                <MovieInfoTitle>User score: </MovieInfoTitle>\n                <span>{rating}</span>\n              </p>\n              <p>\n                <MovieInfoTitle>Overviev: </MovieInfoTitle>\n                <span>{overview}</span>\n              </p>\n\n              <p>\n                <MovieInfoTitle>Genres: </MovieInfoTitle>\n                <span>{genres}</span>\n              </p>\n            </div>\n          </MovieInfo>\n          <div>\n            <p>\n              <b>Additional information</b>\n            </p>\n            <ul>\n              <li>\n                <Link to=\"cast\"> Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </Article>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '32561021188665f103817e2a950fe3f2';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const getMovies = (type = 'trending', query = '', page = 1) => {\n  let path = '';\n\n  switch (type) {\n    case 'trending':\n      // console.log('trending');\n      path = 'trending/movie/day';\n      return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n\n    case 'search':\n      // console.log('search');\n      path = '/search/movie';\n      return axios.get(\n        `${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}&query=${query}`\n      );\n\n    default:\n      break;\n  }\n};\n\nexport const getMovieById = async id => {\n  const path = `/movie/${id}`;\n  return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = (type, id) => {\n  let path = '';\n  switch (type) {\n    case 'casts':\n      path = `/movie/${id}/credits`;\n      break;\n\n    case 'reviews':\n      path = `movie/${id}/reviews`;\n      break;\n\n    default:\n      throw new Error('Invalid type of details');\n  }\n  return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n};\n"],"names":["Article","styled","MovieInfo","MovieInfoTitle","MoviePage","location","useLocation","useState","backUrl","setBackUrl","imgUrl","setImgUrl","title","setTitle","rating","setRating","genres","setGenres","overview","setOverview","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","state","from","getMovieInfo","getMovieById","data","movieInfo","poster_path","vote_average","toFixed","map","genre","name","toLowerCase","join","NotFound","to","src","BASE_IMG_URL","alt","Suspense","fallback","BASE_URL","API_KEY","getMovies","type","query","page","path","axios","id","getMovieDetails","Error"],"sourceRoot":""}