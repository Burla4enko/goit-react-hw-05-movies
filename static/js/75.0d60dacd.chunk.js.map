{"version":3,"file":"static/js/75.0d60dacd.chunk.js","mappings":"iOAGaA,EAAeC,EAAAA,GAAAA,GAAH,wJASZC,EAAaD,EAAAA,GAAAA,GAAH,+fAyBVE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wF,SChCVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACvC,OACE,SAACX,EAAD,WACE,UAACC,EAAD,CAAYW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAAhD,WACE,gBACEU,IACEJ,EACIK,EAAAA,GAAeL,EACfK,EAAAA,GAAeN,EAErBO,IAAG,kBAAaR,MAElB,0BAAOA,QAVMD,EAcpB,KAGN,C,sJCzBc,SAASU,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAWA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,0FAClBF,EADkB,UACOG,EAAAA,EAAAA,IAJhB,YAGS,8BACwBC,KAAKC,QAD7B,6EAAH,qDAIjBH,GACD,GAAE,KAGD,iCACE,8CACA,SAAC,IAAD,CAAYnB,OAAQgB,MAGzB,C,2KCpBKO,EAAW,+BACXC,EAAU,mCACHZ,EAAe,mCAEfQ,EAAY,WAA8C,IAA7CK,EAA4C,uDAArC,WAAYC,EAAyB,uDAAjB,GAAIC,EAAa,uDAAN,EAC1DC,EAAO,GAEX,OAAQH,GACN,IAAK,WAGH,OADAG,EAAO,qBACAC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,EAAzC,iBAAyDG,IAElE,IAAK,SAGH,OADAC,EAAO,gBACAC,EAAAA,EAAAA,IAAA,UACFN,EADE,YACUK,EADV,oBAC0BJ,EAD1B,iBAC0CG,EAD1C,kBACwDD,IAMpE,EAEYI,EAAY,mCAAG,WAAM1B,GAAN,8EACpBwB,EADoB,iBACHxB,GADG,kBAEnByB,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,KAFtB,2CAAH,sDAKZO,EAAkB,SAACN,EAAMrB,GACpC,IAAIwB,EAAO,GACX,OAAQH,GACN,IAAK,QACHG,EAAI,iBAAaxB,EAAb,YACJ,MAEF,IAAK,UACHwB,EAAI,gBAAYxB,EAAZ,YACJ,MAEF,QACE,MAAM,IAAI4B,MAAM,2BAEpB,OAAOH,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,GACjD,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home/Home.js","utils/fetch-movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 20px;\n`;\n\nexport const MoviesItem = styled.li`\n  width: calc((100% / 3) - 32px);\n  padding-bottom: 8px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n  }\n\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n    margin-bottom: 8px;\n    object-fit: contain;\n  }\n\n  span {\n    padding: 4px 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 500;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'utils/fetch-movies';\nimport { MoviesItem, MoviesListUl, StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListUl>\n      {movies.map(({ id, title, backdrop_path, poster_path }) => {\n        return (\n          <MoviesItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? BASE_IMG_URL + poster_path\n                    : BASE_IMG_URL + backdrop_path\n                }\n                alt={`Poster: ${title}`}\n              />\n              <span>{title}</span>\n            </StyledLink>\n          </MoviesItem>\n        );\n      })}\n    </MoviesListUl>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { getMovies } from 'utils/fetch-movies';\n\nexport default function Home() {\n  const [trending, setTrending] = useState([]);\n  const type = 'trending';\n\n  useEffect(() => {\n    const getTrending = async () => {\n      setTrending(await (await getMovies(type)).data.results);\n    };\n\n    getTrending();\n  }, []);\n\n  return (\n    <>\n      <h1>Todays trending:</h1>\n      <MoviesList movies={trending} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '32561021188665f103817e2a950fe3f2';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const getMovies = (type = 'trending', query = '', page = 1) => {\n  let path = '';\n\n  switch (type) {\n    case 'trending':\n      // console.log('trending');\n      path = 'trending/movie/day';\n      return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n\n    case 'search':\n      // console.log('search');\n      path = '/search/movie';\n      return axios.get(\n        `${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}&query=${query}`\n      );\n\n    default:\n      break;\n  }\n};\n\nexport const getMovieById = async id => {\n  const path = `/movie/${id}`;\n  return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = (type, id) => {\n  let path = '';\n  switch (type) {\n    case 'casts':\n      path = `/movie/${id}/credits`;\n      break;\n\n    case 'reviews':\n      path = `movie/${id}/reviews`;\n      break;\n\n    default:\n      throw new Error('Invalid type of details');\n  }\n  return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n};\n"],"names":["MoviesListUl","styled","MoviesItem","StyledLink","Link","MoviesList","movies","location","useLocation","map","id","title","backdrop_path","poster_path","to","state","from","src","BASE_IMG_URL","alt","Home","useState","trending","setTrending","useEffect","getTrending","getMovies","data","results","BASE_URL","API_KEY","type","query","page","path","axios","getMovieById","getMovieDetails","Error"],"sourceRoot":""}